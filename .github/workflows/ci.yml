name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  lint-actions:
    name: Lint GitHub Actions Workflows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install actionlint
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          echo "${PWD}" >> "$GITHUB_PATH"
      
      - name: Run actionlint
        run: actionlint

  unit-tests:
    name: Unit Tests - GHC ${{ matrix.ghc }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ghc: ["9.12"]
        cabal: ["3.14"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
          cabal-update: true

      - name: Show installed versions
        run: |
          cabal --version
          ghc --version

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Cache cabal store
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-

      - name: Build project
        run: just build

      - name: Run unit tests
        run: just test-unit

  cli-tests:
    name: CLI Integration Tests - GHC ${{ matrix.ghc }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ghc: ["9.12"]
        cabal: ["3.14"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
          cabal-update: true

      - name: Show installed versions
        run: |
          cabal --version
          ghc --version

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Cache cabal store
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-

      - name: Build project
        run: just build

      - name: Run CLI integration tests
        run: just test-integration-cli

  build:
    name: Build Check - GHC ${{ matrix.ghc }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            ghc: "9.10"
            cabal: "3.12"
          - os: ubuntu-latest
            ghc: "9.8"
            cabal: "3.10"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
          cabal-update: true

      - name: Show installed versions
        run: |
          cabal --version
          ghc --version

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Cache cabal store
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-

      - name: Build project
        run: just build
